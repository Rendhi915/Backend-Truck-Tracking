{
  "name": "fleet-management-backend",
  "version": "2.0.0",
  "description": "Fleet Management System Backend API with Prisma integration for 1000 mining trucks",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "node scripts/kill-port.js 3001 && nodemon server.js",
    "dev:clean": "node scripts/kill-port.js 3001",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:api": "node scripts/test-api.js",
    "test:load": "node scripts/test-api.js --load-test --users 20 --duration 60",
    
    "prisma:generate": "prisma generate",
    "prisma:studio": "prisma studio",
    "prisma:format": "prisma format",
    "prisma:validate": "prisma validate",
    "prisma:migrate": "prisma migrate deploy",
    "prisma:reset": "prisma migrate reset",
    "prisma:deploy": "prisma migrate deploy",
    "prisma:pull": "prisma db pull",
    "prisma:push": "prisma db push",
    "prisma:seed": "node scripts/prisma-seed.js",

    "seed:history": "node scripts/history-seeder.js",
    "db:setup": "npm run prisma:generate && npm run prisma:migrate && npm run prisma:seed",
    "setup:complete": "./setup-fleet-management.sh",
    "db:seed": "node scripts/seed-data.js",
    "db:backup": "pg_dump -U postgres -h localhost fleet_management > backup_$(date +%Y%m%d_%H%M%S).sql",
    "db:restore": "psql -U postgres -h localhost -d fleet_management",
    "db:migrate": "node scripts/migrate.js",
    "db:optimize": "node scripts/optimize-database.js",

    "update-coordinates": "node scripts/update-coordinates.js",
    "update-schema": "psql -h localhost -U postgres -d fleet_management -f database/update-schema.sql",

    "history:generate": "node scripts/history-seeder.js",
    "history:generate:week": "node scripts/history-seeder.js --days 7 --delete true",
    "history:generate:month": "node scripts/history-seeder.js --days 30 --delete true",
    "history:generate:quick": "node scripts/history-seeder.js --days 1 --limit 10",
    "history:generate:full": "node scripts/history-seeder.js --days 14 --delete true --batch 500",
    "history:events": "node scripts/history-utilities.js events",
    "history:realtime": "node scripts/history-utilities.js realtime",
    "history:realtime:long": "node scripts/history-utilities.js realtime 240",
    "history:clean": "node -e \"const {PrismaClient} = require('@prisma/client'); const prisma = new PrismaClient(); prisma.locationHistory.deleteMany().then(r => console.log('Deleted', r.count, 'records'",

    "lint": "eslint src/ scripts/ --ext .js",
    "lint:fix": "eslint src/ scripts/ --ext .js --fix",
    "format": "prettier --write \"src/**/*.js\" \"scripts/**/*.js\"",
    "clean": "rm -rf node_modules/.prisma && rm -rf dist/",
    "clean:logs": "rm -rf logs/*.log",
    "clean:cache": "rm -rf node_modules/.cache",
    "health": "curl -f http://localhost:3001/health || exit 1",
    "status": "curl -f http://localhost:3001/api/status || exit 1",
    "docker:build": "docker build -t fleet-management-backend .",
    "docker:run": "docker run -p 3001:3001 fleet-management-backend",
    "production:start": "NODE_ENV=production node server.js",
    "production:pm2": "pm2 start ecosystem.config.js",
    "production:stop": "pm2 stop fleet-management",
    "logs": "tail -f logs/app.log",
    "logs:error": "tail -f logs/error.log",
    "benchmark": "node scripts/benchmark.js",
    "monitor": "node scripts/monitor-performance.js"
  },
  "dependencies": {
    "@prisma/client": "^5.18.0",
    "axios": "^1.6.2",
    "bcryptjs": "^2.4.3",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-validator": "^7.2.1",
    "helmet": "^7.1.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "moment": "^2.29.4",
    "pg": "^8.11.3",
    "rate-limiter-flexible": "^2.4.2",
    "ws": "^8.14.2",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "eslint": "^8.55.0",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.1.0",
    "prisma": "^5.18.0",
    "supertest": "^6.3.3"
  },
  "prisma": {
    "schema": "prisma/schema.prisma"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/fleet-management-backend.git"
  },
  "keywords": [
    "fleet-management",
    "mining",
    "trucks",
    "postgresql",
    "prisma",
    "postgis",
    "websocket",
    "real-time",
    "api",
    "node.js"
  ],
  "author": "Your Name <your.email@example.com>",
  "license": "MIT",
  "nodemonConfig": {
    "watch": [
      "src/",
      "server.js",
      "prisma/schema.prisma"
    ],
    "ext": "js,json,prisma",
    "ignore": [
      "node_modules/",
      "logs/",
      "backup_*.sql"
    ],
    "env": {
      "NODE_ENV": "development"
    }
  },
  "jest": {
    "testEnvironment": "node",
    "coverageDirectory": "coverage",
    "collectCoverageFrom": [
      "src/**/*.js",
      "!src/generated/**"
    ],
    "testMatch": [
      "**/__tests__/**/*.js",
      "**/?(*.)+(spec|test).js"
    ]
  },
  "eslintConfig": {
    "env": {
      "node": true,
      "es6": true,
      "jest": true
    },
    "extends": "eslint:recommended",
    "parserOptions": {
      "ecmaVersion": 2021
    },
    "rules": {
      "no-console": "off",
      "no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_"
        }
      ]
    }
  }
}
